print("Hello")
x = 1;
y = 2;
if(x%2==0){print("par");}else{print(x+y)}
print(x)
if(x<1){print("par");}else{print(x+y)}
cls
dataset = read.csv('Data.csv')
library(readr)
dataset <- read_csv(NULL)
View(dataset)
dataset = read.csv('Data.csv')
view(dataset)
View(dataset)
dataset = read.csv('./Data.csv')
dataset = read.csv('Data.csv')
library(caTools)
cls
clear
cl
c
set.seed(123)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
setwd("C:/Users/IBM_ADMIN/Desktop/spyder warehouse/Data-Preprocessing-Template/Data_Preprocessing_Template")
library(caTools)
# Data Preprocessing Template
# Importing the dataset
dataset = read.csv('Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
View(dataset)
View(dataset)
